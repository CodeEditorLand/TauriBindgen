interface lists {
  func list-u8-param(x: list<u8>)
  func list-u16-param(x: list<u16>)
  func list-u32-param(x: list<u32>)
  func list-u64-param(x: list<u64>)
  func list-s8-param(x: list<s8>)
  func list-s16-param(x: list<s16>)
  func list-s32-param(x: list<s32>)
  func list-s64-param(x: list<s64>)
  func list-float32-param(x: list<float32>)
  func list-float64-param(x: list<float64>)

  func list-u8-ret() -> list<u8>
  func list-u16-ret() -> list<u16>
  func list-u32-ret() -> list<u32>
  func list-u64-ret() -> list<u64>
  func list-s8-ret() -> list<s8>
  func list-s16-ret() -> list<s16>
  func list-s32-ret() -> list<s32>
  func list-s64-ret() -> list<s64>
  func list-float32-ret() -> list<float32>
  func list-float64-ret() -> list<float64>

  func tuple-list(x: list<tuple<u8, s8>>) -> list<tuple<s64, u32>>
  func string-list-arg(a: list<string>)
  func string-list-ret() -> list<string>
  func tuple-string-list(x: list<tuple<u8, string>>) -> list<tuple<string, u8>>
  func string-list(x: list<string>) -> list<string>

  record some-record {
    x: string,
    y: other-record,
    z: list<other-record>,
    c1: u32,
    c2: u64,
    c3: s32,
    c4: s64,
  }
  record other-record {
    a1: u32,
    a2: u64,
    a3: s32,
    a4: s64,
    b: string,
    c: list<u8>,
  }
  func record-list(x: list<some-record>) -> list<other-record>
  func record-list-reverse(x: list<other-record>) -> list<some-record>

  variant some-variant {
    a(string),
    b,
    c(u32),
    d(list<other-variant>),
  }
  variant other-variant {
    a,
    b(u32),
    c(string),
  }
  func variant-list(x: list<some-variant>) -> list<other-variant>

  type load-store-all-sizes = list<tuple<
    string,
    u8,
    s8,
    u16,
    s16,
    u32,
    s32,
    u64,
    s64,
    float32,
    float64,
    char,
  >>
  func load-store-everything(a: load-store-all-sizes) -> load-store-all-sizes
}
